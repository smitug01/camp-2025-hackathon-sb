---
import { getLocale } from "../../i18n";
import teams from "../../assets/data/teams";
import { Image } from "astro:assets";

const t = getLocale(Astro.url);

// Function to generate Gravatar URL from email hash
function getGravatarUrl(emailHash, size = 80) {
  return `https://www.gravatar.com/avatar/${emailHash}?s=${size}&d=identicon`;
}

// Function to get initials from name (fallback for when Gravatar fails to load)
function getInitials(name) {
  return name
    .split(" ")
    .map((part) => part.charAt(0))
    .join("")
    .toUpperCase()
    .substring(0, 2);
}
---

<section class="container theme-grid emfont-NotoSansTC-600">
  <h2 class="section-title emfont-MaokenAssortedSansTC">
    Â§è‰ª§ÁáüÁ±åÂÇôÂúòÈöä
  </h2>

  {
    teams.map((team) => (
      <div class="team-section">
        <h3 class="team-title emfont-MaokenAssortedSansTC">
          {team.name}
        </h3>
        <div class="team-members">
          {team.members.map((member, memberIndex) => (
            <div class="member-card">
              <div
                class="member-avatar"
                style={`background-color: white;`}
                data-member-id={`${team.name}-${memberIndex}`}
              >
                <Image
                  src={getGravatarUrl(member.emailHash, 100)}
                  alt={member.name}
                  loading="lazy"
                  onerror='this.style.display="none"; this.nextElementSibling.style.display="flex";'
                  height={100}
                  width={100}
                  draggable="false"
                  class="member-image"
                />
                <span class="initials" style="display: none;">
                  {getInitials(member.name)}
                </span>
                <div class="easter-egg-effect" style="display: none;"></div>
                <div class="click-counter" style="display: none;">0</div>
              </div>
              <p class="member-name">{member.name}</p>
            </div>
          ))}
        </div>
      </div>
    ))
  }
</section>

<script>
// Easter egg functionality
const easterEggEmojis = [
  'üéâ', '‚ú®', 'üåü', 'üí´', 'üéä', 'üî•', 'üí•', '‚ö°', 
  'üåà', 'ü¶Ñ', 'üéà', 'üéÜ', 'üå∏', 'üçÄ', 'üéØ', 'üèÜ',
  'üòÑ', 'üòä', 'ü§î', 'üòé', 'ü§ó', 'üòâ', 'ü•≥', 'ü§©'
];

const easterEggMessages = [
  'ÂìáÔºÅÁôºÁèæÊàë‰∫ÜÔºÅ', '‰Ω†Â•ΩÂ•áÂøÉÁúüÂº∑ÔºÅ', 'ÂÜçÈªû‰∏ÄÊ¨°Ë©¶Ë©¶Ôºü', 
  '(*¬¥‚àÄÔΩÄ*)', '(ÔΩ°‚óï‚Äø‚óïÔΩ°)', 'Ÿ©(‚óï‚Äø‚óï)€∂', 
  '‡≤†_‡≤†', '(¬¨‚Äø¬¨)', '(‚òÜ‚ñΩ‚òÜ)',
  'Âí¶Ôºü', 'ÂòøÂòø', 'Âó®ÔΩû', '( Õ°¬∞ Õú ñ Õ°¬∞)'
];

function getRandomElement(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function showEasterEgg(avatar) {
  const effect = avatar.querySelector('.easter-egg-effect');
  const counter = avatar.querySelector('.click-counter');
  const currentCount = parseInt(counter.textContent) + 1;
  
  counter.textContent = currentCount;
  counter.style.display = 'block';
  
  // Èö®Ê©üÈÅ∏ÊìáÈ°ØÁ§∫ emoji ÊàñË®äÊÅØ
  const showEmoji = Math.random() > 0.5;
  const content = showEmoji 
    ? getRandomElement(easterEggEmojis)
    : getRandomElement(easterEggMessages);
  
  effect.textContent = content;
  effect.style.display = 'block';
  effect.style.fontSize = showEmoji ? '2rem' : '0.8rem';
  
  // Ê∑ªÂä†ÂãïÁï´ÊïàÊûú
  avatar.classList.add('easter-egg-active');
  
  // ÁâπÊÆäÊïàÊûúÔºöÈªûÊìä 10 Ê¨°ÊôÇÁöÑÂΩ©Ëõã
  if (currentCount === 10) {
    effect.textContent = 'üèÜ ‰Ω†ÊòØÈªûÊìäÂ§ßÂ∏´ÔºÅ';
    effect.style.fontSize = '0.7rem';
    avatar.classList.add('master-clicker');
  }
  
  // ÁâπÊÆäÊïàÊûúÔºöÈªûÊìä 25 Ê¨°ÊôÇÁöÑÂΩ©Ëõã
  if (currentCount === 25) {
    effect.textContent = 'ü§Ø È©ö‰∫∫ÁöÑÊØÖÂäõÔºÅ';
    effect.style.fontSize = '0.7rem';
    avatar.classList.add('legendary-clicker');
  }
  
  // Ê∏ÖÈô§ÊïàÊûú
  setTimeout(() => {
    effect.style.display = 'none';
    avatar.classList.remove('easter-egg-active');
    
    // Âª∂ÈÅ≤Èö±ËóèË®àÊï∏Âô®
    setTimeout(() => {
      if (currentCount < 5) {
        counter.style.display = 'none';
      }
    }, 1000);
  }, 2000);
}

// Á∂ÅÂÆöÈªûÊìä‰∫ã‰ª∂
document.addEventListener('DOMContentLoaded', () => {
  const memberAvatars = document.querySelectorAll('.member-avatar');
  
  memberAvatars.forEach(avatar => {
    avatar.addEventListener('click', (e) => {
      e.preventDefault();
      showEasterEgg(avatar);
    });
    
    // ÁÇ∫È†≠ÂÉèÊ∑ªÂä†ÈªûÊìäÊ∏∏Ê®ôÊèêÁ§∫
    avatar.style.cursor = 'pointer';
  });
});
</script>

<style>
  .theme-grid {
    padding-top: 2rem;
    padding-bottom: 2rem;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    text-align: left;
    position: relative;
  }

  .theme-grid::before {
    content: "";
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100vw;
    height: 100%;
    z-index: -1;
  }

  .section-title {
    color: #fff;
    font-size: 3rem;
    line-height: 150%;
    margin-bottom: 3rem;
  }

  .team-section {
    margin-bottom: 3rem;
    width: 100%;
  }

  .team-title {
    font-size: 2.25rem;
    font-style: normal;
    line-height: 150%;
    color: #fff;
    margin-bottom: 1.5rem;
  }

  .team-members {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem 1.5rem;
  }

  .member-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 1rem;
    width: 130px;
  }

  .member-avatar {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5rem;
    overflow: hidden;
    position: relative;
    transition: transform 0.3s ease;
    user-select: none;
    cursor: pointer;
  }

  .member-avatar:hover {
    transform: scale(1.1);
  }

  .member-avatar:active {
    transform: scale(0.95) translateY(3px);
    transition: transform 0.1s ease;
  }

  .member-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .initials {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }

  /* Easter Egg Ê®£Âºè */
  .easter-egg-effect {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 0.3rem 0.6rem;
    border-radius: 1rem;
    font-size: 0.8rem;
    font-weight: bold;
    white-space: nowrap;
    z-index: 10;
    animation: popIn 0.3s ease-out;
    pointer-events: none;
  }

  .click-counter {
    position: absolute;
    top: -5px;
    right: -5px;
    background: #ff6b6b;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
    font-weight: bold;
    z-index: 11;
    border: 2px solid white;
    animation: bounce 0.5s ease-out;
  }

  .easter-egg-active {
    animation: shake 0.5s ease-in-out, glow 0.5s ease-in-out;
  }

  .master-clicker {
    animation: rainbow 1s ease-in-out;
  }

  .legendary-clicker {
    animation: explosion 1s ease-in-out;
  }

  @keyframes popIn {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.2);
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-5px);
    }
    60% {
      transform: translateY(-3px);
    }
  }

  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px) rotate(-5deg); }
    75% { transform: translateX(5px) rotate(5deg); }
  }

  @keyframes glow {
    0%, 100% { box-shadow: 0 0 5px rgba(255, 255, 255, 0.5); }
    50% { box-shadow: 0 0 20px rgba(255, 255, 255, 0.8), 0 0 30px rgba(255, 255, 255, 0.6); }
  }

  @keyframes rainbow {
    0% { filter: hue-rotate(0deg); }
    25% { filter: hue-rotate(90deg); }
    50% { filter: hue-rotate(180deg); }
    75% { filter: hue-rotate(270deg); }
    100% { filter: hue-rotate(360deg); }
  }

  @keyframes explosion {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); filter: brightness(1.5) contrast(1.2); }
    100% { transform: scale(1); }
  }

  .member-name {
    font-size: 1.5rem;
    font-style: normal;
    line-height: 150%;
    color: #fff;
    text-align: center;
    margin: 0;
  }

  @media (max-width: 768px) {
    .section-title {
      font-size: 2.25rem;
    }

    .team-title {
      font-size: 1.75rem;
    }

    .team-members {
      gap: 1.5rem 1rem;
      justify-content: flex-start;
    }

    .member-card {
      width: 110px;
    }

    .member-avatar {
      width: 80px;
      height: 80px;
      font-size: 1.2rem;
    }

    .member-name {
      font-size: 1.25rem;
    }

    .easter-egg-effect {
      font-size: 0.7rem;
      padding: 0.2rem 0.4rem;
    }

    .click-counter {
      width: 18px;
      height: 18px;
      font-size: 0.6rem;
    }
  }

  @media (max-width: 480px) {
    .team-members {
      gap: 1.25rem 0.75rem;
      justify-content: flex-start;
    }

    .member-card {
      width: 100px;
    }

    .member-avatar {
      width: 70px;
      height: 70px;
      font-size: 1rem;
    }

    .member-name {
      font-size: 1rem;
    }

    .easter-egg-effect {
      font-size: 0.6rem;
      padding: 0.2rem 0.3rem;
    }

    .click-counter {
      width: 16px;
      height: 16px;
      font-size: 0.5rem;
    }
  }

  /* Ê∑ªÂä†Á¶ÅÊ≠¢ÂúñÁâáÊãñÊãΩÁöÑÊ®£Âºè */
  img {
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
</style>
